{"version":3,"file":"static/js/841.1fb7a216.chunk.js","mappings":"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","sources":["Page/Register/Register.styled.js","Page/Login/Login.jsx","Page/Register/Register.jsx","components/AuthUserComponent/AuthUserComponent.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const Span = styled.span`\n  color: #1900d5;\n  margin-left: 10px;\n  cursor: pointer;\n`;\n","import { Button, TextField, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { Span } from 'Page/Register/Register.styled';\nimport { Fragment } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nconst Login = props => {\n  const { handlInputChange, email, password } = props;\n  const navigate = useNavigate();\n\n  return (\n    <Fragment>\n      <TextField\n        type='email'\n        name='email'\n        required\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        size='small'\n        margin='normal'\n        fullWidth={true}\n        label='Email'\n        placeholder='enter your email'\n        variant='outlined'\n        value={email}\n        onChange={handlInputChange}\n      />\n      <TextField\n        type='password'\n        name='password'\n        required\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        size='small'\n        margin='normal'\n        fullWidth={true}\n        label='Password'\n        placeholder='enter your password'\n        variant='outlined'\n        value={password}\n        onChange={handlInputChange}\n      />\n      <Button\n        sx={{\n          marginTop: 1,\n          width: '50%',\n          marginBottom: 2,\n        }}\n        type='submit'\n        variant='contained'\n      >\n        Login\n      </Button>\n      <Typography variant='body1'>\n        Don't have an account?\n        <Span onClick={() => navigate('/register')}>Register</Span>\n      </Typography>\n    </Fragment>\n  );\n};\n\nLogin.propTypes = {\n  handlInputChange: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n};\nexport default Login;\n","import { Button, TextField, Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\nimport { Fragment } from 'react';\nimport { Span } from './Register.styled';\nimport { useNavigate } from 'react-router-dom';\n\nconst Register = props => {\n  const { handlInputChange, email, password, name } = props;\n  const navigate = useNavigate();\n\n  return (\n    <Fragment>\n      <TextField\n        type='text'\n        name='name'\n        required\n        size='small'\n        margin='normal'\n        fullWidth={true}\n        label='Name'\n        placeholder='enter your name'\n        variant='outlined'\n        value={name}\n        onChange={handlInputChange}\n      />\n      <TextField\n        type='text'\n        name='email'\n        required\n        size='small'\n        margin='normal'\n        fullWidth={true}\n        label='Email'\n        placeholder='enter your email'\n        variant='outlined'\n        value={email}\n        onChange={handlInputChange}\n      />\n      <TextField\n        type='password'\n        name='password'\n        required\n        size='small'\n        margin='normal'\n        fullWidth={true}\n        label='Password'\n        placeholder='enter your password'\n        variant='outlined'\n        value={password}\n        onChange={handlInputChange}\n      />\n      <Button\n        sx={{\n          marginTop: 1,\n          width: '50%',\n          marginBottom: 2,\n        }}\n        type='submit'\n        variant='contained'\n      >\n        Register\n      </Button>\n      <Typography variant='body1'>\n        Do you have an account?\n        <Span onClick={() => navigate('/login')}>Login</Span>\n      </Typography>\n    </Fragment>\n  );\n};\n\nRegister.propTypes = {\n  handlInputChange: PropTypes.func,\n  email: PropTypes.string.isRequired,\n  password: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n};\nexport default Register;\n","import { Box } from '@mui/material';\nimport Login from 'Page/Login/Login';\nimport Register from 'Page/Register/Register';\nimport { Fragment, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useLocation } from 'react-router-dom';\nimport { logInUser, registerUser } from 'redux/operetions/auth-operetions';\n\nconst AuthUserComponent = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const dispatch = useDispatch();\n\n  const handlInputChange = e => {\n    const { value, name } = e.currentTarget;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n      case 'name':\n        setName(value);\n        break;\n      case 'password':\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const userRegisterInfo = { name, email, password };\n    const userLoginInfo = { email, password };\n    if (name) {\n      dispatch(registerUser(userRegisterInfo)).then(result => {\n        if (result.payload) {\n          return;\n        }\n\n        reset();\n      });\n    } else {\n      dispatch(logInUser(userLoginInfo)).then(result => {\n        if (result.payload) {\n          return;\n        }\n\n        reset();\n      });\n    }\n  };\n\n  const reset = () => {\n    setEmail('');\n    setPassword('');\n    setName('');\n  };\n\n  const location = useLocation();\n\n  return (\n    <Fragment>\n      <form onSubmit={handleSubmit}>\n        <Box\n          sx={{\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            flexDirection: 'column',\n            maxWidth: '500px',\n            margin: '50px auto',\n            padding: '20px',\n            borderRadius: '5px',\n            boxShadow: '5px 5px 10px #2a2a2a',\n            background: '#fff',\n          }}\n        >\n          {}\n          {location.pathname === '/login' ? (\n            <Login\n              handlInputChange={handlInputChange}\n              password={password}\n              email={email}\n            />\n          ) : location.pathname === '/register' ? (\n            <Register\n              handlInputChange={handlInputChange}\n              name={name}\n              password={password}\n              email={email}\n            />\n          ) : null}\n        </Box>\n      </form>\n    </Fragment>\n  );\n};\n\nexport default AuthUserComponent;\n"],"names":["Span","styled","props","handlInputChange","email","password","navigate","useNavigate","Fragment","TextField","type","name","required","pattern","title","size","margin","fullWidth","label","placeholder","variant","value","onChange","Button","sx","marginTop","width","marginBottom","Typography","onClick","useState","setEmail","setPassword","setName","dispatch","useDispatch","e","currentTarget","reset","location","useLocation","onSubmit","preventDefault","userRegisterInfo","userLoginInfo","registerUser","then","result","payload","logInUser","Box","display","justifyContent","alignItems","flexDirection","maxWidth","padding","borderRadius","boxShadow","background","pathname"],"sourceRoot":""}